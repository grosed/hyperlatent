source('mcmc_cech.R')
source('getdat_cech.R')
source("graphsummary.R") 

set.seed(1672348)

## read in data
load("./data/gro_rndm_to_fit.RData") # sb_sub_elst - this is the data to run the MCMC on
load("./data/gro_rndm_full.RData") # sb_full_elst - 'full' snowball sample to consider
load("./data/gro_rndm_extra.RData") # sb_extra_elst - hyperedges added to go from _sub_ to _full_

elst = rndm_sub_elst # to fit on
elst = lapply( elst, sort )
elst = unique( elst ) # for sanity
elen = unlist(lapply(elst, length))

## set up mcmc
N = max( unlist( elst ) )
K = max( unlist( lapply(elst, length) ) )
dens = rep(NA, K-1)
for( k in 2:K){ dens[k-1] = sum(elen==k)/choose(N, k) }
print(paste("N = ", N, "  K = ", K))

####################################
## run MCMC on nonsimplicial model

avec = rep(2,K-1)
bvec = rep(50,K-1)
limvec = .9*dens
prior = list( m = c(0,0), sigmu = .2*diag(2), a0=avec, a1=avec, b0 = bvec, b1=bvec, lims=limvec, Phi = NA, nu = NA, lam = rep(1, K-1))
nIts = 100000
eps = c(0.25, 0.25) #c(0.1, .1) # these will be updated

## run mcmc and save output
t1 = Sys.time()
out = runMCMC_cech(elst, N, K, nIts, eps, prior, bkids=c(1,9), modif=TRUE, DA=TRUE, rSimp=FALSE, rInc=TRUE)
t2 = Sys.time()
time = difftime(t2,t1,units="mins")

## save fitted model
save(out, file="./output/grocery_fit_nonsimp_rndm_may22.RData")
save(time, file="./output/grocery_time_nonsim_rndm_may22.RData")

####################################
## run MCMC on rnoninc model
if (0){
avec = rep(2,K-1)
bvec = rep(50,K-1)
limvec = dens
prior = list( m = c(0,0), sigmu = .2*diag(2), a0=avec, a1=avec, b0 = bvec, b1=bvec, lims=limvec, Phi = NA, nu = NA, lam = rep(1, K-1))
nIts = 40000
eps = c(0.1, .1) # these will be updated

## run mcmc and save output
t1 = Sys.time()
out = runMCMC_cech(elst, N, K, nIts, eps, prior, bkids=c(1,9), modif=TRUE, DA=TRUE, rSimp=FALSE, rInc=FALSE)
t2 = Sys.time()
time = difftime(t2,t1,units="mins")

## save fitted model
save(out, file="./output/grocery_fit_rnoninc_rndm_may22.RData")
save(time, file="./output/grocery_time_rnoninc_rndm_may22.RData")

}
####################################
## run MCMC on simplicial model

avec = rep(2,K-1)
bvec = rep(50,K-1)
limvec = .9*dens
prior = list( m = c(0,0), sigmu = .2*diag(2), a0=avec, a1=avec, b0 = bvec, b1=bvec, lims=limvec, Phi = NA, nu = NA, lam = rep(1, K-1))
nIts = 100000 
eps = c(.25, .25) #c(0.1, .1) # these will be updated

## run mcmc and save output
t1 = Sys.time()
out = runMCMC_cech(elst, N, K, nIts, eps, prior, bkids=c(1,9), modif=TRUE, DA=TRUE, rSimp=TRUE)
t2 = Sys.time()
time = difftime(t2,t1,units="mins")

## save fitted model
save(out, file="./output/grocery_fit_simp_rndm_may22.RData")
save(time, file="./output/grocery_time_sim_rndm_may22.RData")


## ## initially assigned this to simplicial vs non simplicial
## ## looking better to use this for predicting 'new' node hyperedges
## ####################### fit to observed hypergraph #############################

## ## read in data
## elst = readRDS("./data/grocery_obs_hypergraph.RData")
## N = length(unique(unlist(elst)))
## K = max( unlist( lapply( elst, length ) ) )

## ## ############################################
## ## 1) fit nonsimplicial model ('standard' one)
## ## ############################################

## avec = rep(2, K-1)
## bvec = rep(20, K-1)
## lvec = rep(1, K-1) #.2*dens ## upper limit for noise distn
## prior = list( m = c(0,0), sigmu = .2*diag(2), a0=avec, a1=avec, b0 = bvec, b1=bvec, lims=lvec, Phi = NA, nu = NA, lam = rep(1, K-1))
## nIts = 50000 
## eps = c(0.01, .01)

## ## run mcmc and save output
## t1 = Sys.time()
## out = runMCMC_cech(elst, N, K, nIts, eps, prior, modif=TRUE, bkids=c(2,3), DA=TRUE, rSimp=FALSE) 
## t2 = Sys.time()
## time = difftime(t2,t1, units="mins") # want to save this

## ## save MCMC samples and timings - want to inspect this first before looking into predictives
## save( out, file="./output/grocery_obs_hyp_nonsimp_fit.RData")
## save( time, file="./output/grocery_obs_hyp_nonsimp_time.RData")

## ## ############################################
## ## 2) fit 'simplicial' model
## ## ############################################

## avec = rep(2, K-1)
## bvec = rep(20, K-1)
## lvec = rep(1, K-1)
## prior = list( m = c(0,0), sigmu = .2*diag(2), a0=avec, a1=avec, b0 = bvec, b1=bvec, lims=lvec, Phi = NA, nu = NA, lam = rep(1, K-1))
## nIts = 50000 
## eps = c(0.01, .1)

## ## run mcmc and save output
## t1 = Sys.time()
## out = runMCMC_cech(elst, N, K, nIts, eps, prior, modif=TRUE, bkids=c(2,3), DA=TRUE, rSimp=TRUE) 
## t2 = Sys.time()
## time = difftime(t2,t1, units="mins") # want to save this

## ## save MCMC samples and timings - want to inspect this first before looking into predictives
## save( out, file="./output/grocery_obs_hyp_simp_fit.RData")
## save( time, file="./output/grocery_obs_hyp_simp_time.RData")

## ####################### fit to simplicial hypergraph #############################

## ## read in data
## elst = readRDS("./data/grocery_simp_hypergraph.RData")
## N = length(unique(unlist(elst)))
## K = max( unlist( lapply( elst, length ) ) )

## ## ############################################
## ## 1) fit nonsimplicial model ('standard' one)
## ## ############################################

## avec = rep(2, K-1)
## bvec = rep(20, K-1)
## lvec = rep(1, K-1) #.2*dens ## upper limit for noise distn
## prior = list( m = c(0,0), sigmu = .2*diag(2), a0=avec, a1=avec, b0 = bvec, b1=bvec, lims=lvec, Phi = NA, nu = NA, lam = rep(1, K-1))
## nIts = 50000 
## eps = c(0.01, .01)

## ## run mcmc and save output
## t1 = Sys.time()
## out = runMCMC_cech(elst, N, K, nIts, eps, prior, modif=TRUE, bkids=c(2,3), DA=TRUE, rSimp=FALSE) 
## t2 = Sys.time()
## time = difftime(t2,t1, units="mins") # want to save this

## ## save MCMC samples and timings - want to inspect this first before looking into predictives
## save( out, file="./output/grocery_simp_hyp_nonsimp_fit.RData")
## save( time, file="./output/grocery_simp_hyp_nonsimp_time.RData")

## ## ############################################
## ## 2) fit 'simplicial' model
## ## ############################################

## avec = rep(2, K-1)
## bvec = rep(20, K-1)
## lvec = rep(1, K-1)
## prior = list( m = c(0,0), sigmu = .2*diag(2), a0=avec, a1=avec, b0 = bvec, b1=bvec, lims=lvec, Phi = NA, nu = NA, lam = rep(1, K-1))
## nIts = 50000 
## eps = c(0.01, .1)

## ## run mcmc and save output
## t1 = Sys.time()
## out = runMCMC_cech(elst, N, K, nIts, eps, prior, modif=TRUE, bkids=c(2,3), DA=TRUE, rSimp=TRUE) 
## t2 = Sys.time()
## time = difftime(t2,t1, units="mins") # want to save this

## ## save MCMC samples and timings - want to inspect this first before looking into predictives
## save( out, file="./output/grocery_simp_hyp_simp_fit.RData")
## save( time, file="./output/grocery_simp_hyp_simp_time.RData")
